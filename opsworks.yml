AWSTemplateFormatVersion: "2010-09-09"

Description: "Opsworks ELK Stack"

Parameters:
  DataDogApiKey:
    Type: String
    Description: "DataDog API Key"
    Default: ""
  Environment:
    Type: String
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  DefaultSubnet:
    Type: String
  DefaultSecurityGroup:
    Type: String
  StackName:
    Type: String
  VpcId:
    Type: String

Resources:

  OpsworksEc2Profile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref OpsworksEc2Role

  OpsworksEc2Role:
      Type: AWS::IAM::Role
      Properties:
          RoleName: !Sub ${Environment}-OpsWorks-${AWS::Region}
          ManagedPolicyArns: [
              "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
              "arn:aws:iam::aws:policy/service-role/AWSOpsWorksRole",
              "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
              "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
            ]
          Path: /
          AssumeRolePolicyDocument:
            {
              "Version": "2008-10-17",
              "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "ec2.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
          Policies:
              - PolicyName: AWSEC2ALBAccessPolicy
                PolicyDocument:
                  {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Action": [
                                  "elasticloadbalancing:RegisterTargets",
                                  "elasticloadbalancing:DeregisterTargets",
                                  "elasticloadbalancing:DescribeTargetHealth"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                          }
                      ]
                  }
              - PolicyName: Assosiate_disassosiate_eip
                PolicyDocument:
                  {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Sid": "Stmt1459286115000",
                              "Effect": "Allow",
                              "Action": [
                                  "ec2:AssociateAddress",
                                  "ec2:DisassociateAddress"
                              ],
                              "Resource": [
                                  "*"
                              ]
                          }
                      ]
                  }
              - PolicyName: OpsWorkAccess
                PolicyDocument:
                  {
                      "Version": "2012-10-17",
                      "Statement": [
                          {
                              "Sid": "Stmt1457559126000",
                              "Effect": "Allow",
                              "Action": [
                                  "opsworks:CreateDeployment",
                                  "opsworks:DescribeDeployments"
                              ],
                              "Resource": [
                                  "*"
                              ]
                          },
                          {
                              "Sid": "Stmt1457559165000",
                              "Effect": "Allow",
                              "Action": [
                                  "opsworks:DescribeApps",
                                  "opsworks:DescribeCommands",
                                  "opsworks:DescribeDeployments",
                                  "opsworks:DescribeElasticIps",
                                  "opsworks:DescribeElasticLoadBalancers",
                                  "opsworks:DescribeInstances",
                                  "opsworks:DescribeLayers",
                                  "opsworks:DescribeLoadBasedAutoScaling",
                                  "opsworks:DescribePermissions",
                                  "opsworks:DescribeStacks",
                                  "opsworks:DescribeTimeBasedAutoScaling",
                                  "opsworks:DescribeUserProfiles",
                                  "opsworks:DescribeVolumes",
                                  "opsworks:RegisterElasticIp",
                                  "opsworks:SetLoadBasedAutoScaling",
                                  "opsworks:SetTimeBasedAutoScaling",
                                  "opsworks:UpdateApp",
                                  "opsworks:UpdateElasticIp",
                                  "opsworks:UpdateInstance",
                                  "opsworks:UpdateLayer",
                                  "opsworks:UpdateStack",
                                  "s3:PutObject",
                                  "s3:AbortMultipartUpload",
                                  "s3:ListMultipartUploadParts",
                                  "s3:ListBucket",
                                  "s3:GetBucketLocation",
                                  "s3:ListBucketMultipartUploads",
                                  "s3:ListBucketVersions",
                                  "s3:DeleteObject"
                              ],
                              "Resource": [
                                  "*"
                              ]
                          }
                      ]
                  }

  OpsworksRole:
      Type: AWS::IAM::Role
      Properties:
          RoleName: !Sub ${Environment}-OpsWorksRole-${AWS::Region}
          Path: /
          AssumeRolePolicyDocument:
            {
              "Version": "2008-10-17",
              "Statement": [
                {
                  "Sid": "",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "opsworks.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            }
          Policies:
              - PolicyName: AWSOpsWorksServiceRole
                PolicyDocument:
                  {
                      "Statement": [
                          {
                              "Action": [
                                  "ec2:*",
                                  "iam:PassRole",
                                  "cloudwatch:GetMetricStatistics",
                                  "cloudwatch:DescribeAlarms",
                                  "ecs:*",
                                  "elasticloadbalancing:*",
                                  "rds:*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                  "*"
                              ]
                          }
                      ]
                  }

  OpsWorksStack:
    Type: AWS::OpsWorks::Stack
    Properties:
      Name: !Sub ${StackName}-${Environment}
      ServiceRoleArn: !GetAtt OpsworksRole.Arn
      DefaultInstanceProfileArn: !GetAtt OpsworksEc2Profile.Arn
      DefaultSshKeyName: !Ref KeyName
      DefaultOs: Ubuntu 16.04 LTS
      DefaultRootDeviceType: ebs
      VpcId: !Ref VpcId
      DefaultSubnetId: !Ref DefaultSubnet
      UseCustomCookbooks: true
      UseOpsworksSecurityGroups: false
      CustomCookbooksSource:
        Type: git
        Url: "https://github.com/giobt/opsworks-elk.git"
      ConfigurationManager:
        Name: Chef
        Version: "12"

  OpsWorksLayerELK:
    Type: AWS::OpsWorks::Layer
    Properties:
      StackId: !Ref OpsWorksStack
      Name: "ELK Logging"
      Type: custom
      Shortname: "elk"
      EnableAutoHealing: false
      AutoAssignElasticIps: false
      AutoAssignPublicIps: false
      CustomJson: !Sub |
        {
          "elkapp": {
            "datadogkey": "${DataDogApiKey}",
            "instance": "ELK"
          }
        }
      CustomRecipes:
        Setup:
          - elk::setup
        Configure:
          - elk::configure
      CustomSecurityGroupIds:
        - !Ref DefaultSecurityGroup

  elk1:
    Type: "AWS::OpsWorks::Instance"
    Properties:
      StackId: !Ref OpsWorksStack
      LayerIds:
        - !Ref OpsWorksLayerELK
      InstanceType: "t2.medium"

Outputs:
  ELK:
    Value: !GetAtt elk1.PrivateIp
